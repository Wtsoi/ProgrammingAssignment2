q()
utils::arrangeWindows(action='restore')
utils::arrangeWindows(action='horizontal')
utils::arrangeWindows(action='cascade')
chooseCRANmirror()
ls()
q()
q()
library("rmarkdown", lib.loc="~/R/win-library/3.4")
library("markdown", lib.loc="~/R/win-library/3.4")
library("knitr", lib.loc="~/R/win-library/3.4")
library("yaml", lib.loc="~/R/win-library/3.4")
install.packages("Rcmdr")
q()
render ("HelloWorld.Rmd", "md_document")
x <- 4
class (x)
x <- c(4,TRUE)
class (x)
x <-c(1,3,5)
y <-c(3,2,10)
cbind(x,y)
x <-1:4
y <-2
x+y
x<-c(17,14,4,5,13,12,10)
x[x>10]=4
x
x[x==4]>10
x[x==10]<-4
x
x[x>10]<-4
x
x[x>10]==4
q90
q()
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
m_sqrt<-sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
arg(list.files())
args(list.files())
args(list.files)
info()
help.start()
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path(folder1,folder2)
file.path("folder1","folder2")
?dir
?dir.create
dir.create("testdir2"),file.path("testdir3")
dir.create("testdir2",file.path("testdir3"))
dir.create(file.path('testdir2','testdir3'),recursive=true)
dir.create(file.path('testdir2','testdir3'), recursive=true)
dir.create(file.path('testdir2','testdir3'), recursive=TRUE)
setwd("old.dir")
setwd(old.dir)
swirl()
swirl()
bye()
q()
swirl()
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_Char,collapse=" ")
paste(my_char,collapse=" ")
my_name<-c(my_char,"Wardil")
my_name
paste(my_name,collapse = " ")
paste("Hello","World!",sep = " ")
paste("Hello","World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("x","y","z"),sep = "")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
q()
library(swirl)
swirl()
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na=TRUE)
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x),x>0
]
x[!is.na(x),x>0]
x[!is.na(x)>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("bill","Gina","Kelly","Sean")
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
q()
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10=<10
10<=10
5!=7
5 NOT=7
5!=7
5!==7
info()
5==!7
info()
5!True7
!5 == 7
FALSE&FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | C(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>8 || 6 !=8 && 4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
my_mean()
?"/"
submit()
submit()
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder (5)
remainder(11,5)
remainder(divisor=11, num =5)
remainder(4, div =2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(func(c(1.4,3.6,7.9,8.8))
func(c(1.4,3.6,7.9,8.8))
evaluate(func = c(1.4,3.6,7.9,8.8))
evaluate(sd(c(1.4,3.6,7.9,8.8))
args(evaluate)
sd(c(1.4,3.6,7.9,8.8))
sd(evaluate)
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(x,c(8,4,0))
evaluate(function(x){x},c(8,4,0))
evaluate({x},c(8,4,0))
evaluate(function(x),c(8,4,0))
evaluate(x<-c(8,4,0))
evaluate(function(x),c(8,4,0))
evaluate("x",c(8,4,0))
evaluate(x=c(8,4,0))
evaluate([x],c(8,4,0))
evaluate(function[x],c(8,4,0))
evaluate(function(x){x},c(8,4,0))
info()
evaluate(function(x){x=c(8,4,0)})
evaluate(function(x=c(8,4,0))
evaluate(function(x){x[c(8,4,0)])
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[lenght()]},c(8,4,0))
evaluate(function(x){x[lenght(c(8,4,0)])
evaluate(function(x){x[lenght(c(8,4,0))])
evaluate(function(x){x(y)},y<-length(c(8,4,0))
evaluate(function(x){x[length(c(8,4,0)])
length(c(8,4,0))
evaluate(length(c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},x<-c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("programming","is","fun!")
paste("Programming","is","fun!")
submit()
Telegram("Hello","to","you")
telegram("Hello","to","India")
submit()
madlibs("Scotland","the junior","tuition fee increase")
mad_libs("Scotland","the junior","tuition fee increase")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
?&
?"&"
submit()
submit()
submit()
submit()
paste("I","love","R!")
'I'%p%'love'%p%'R!'
q()
library(swirl)
swirl()
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3<-("October 17, 1986 08:24")
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
q()
dir()
source("pollutantmean.R")
cwd
getwd()
dir
dir()
pollutantmean <- function(directory, pollutant, id = 1:332){
}
pollutantmean("specdata",nitrate",70:72)
?file.path
library(swirl)
swirl()
TRUE=TRUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
1=<=10
10<=10
5 != 7
!5 = 7
5 = !7
5 != 7
!5 == 7
FALSE & FALSE
TRUE & C(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
pollutantmean("specdata","nitrate",70:72)
source(pollutantmean.r)
source(pollutantmean.R)
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","nitrate",23)
pollutantmean("specdata","nitrate",23)
q()
library(swirl)
swirl()
True|c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
bye()
q()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags(,11:17)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmasses,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris$Sepal.length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
nrow(iris)
?apply
apply(iris,2,mean)
colMeans(iris)
colMeans(iris[,1:4])
data(mtcars)
summary(mtcars)
tapply(mtcars$mpg,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
lapply(mtcars,mean)
mean(mtcars$mgp,mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
with(mtcars(tapply(mpg,cyl,mean)))
apply(mtcars,2,mean)
x <- lapply(mtcars$cyl=4,mean)
mtcars
lapply(mtcars$cyl[,4],mean)
lapply(mtcars$cyl[4],mean)
tapply(mtcars$hp,mtcars$cyl[4],mean)-tapply(mtcars$hp,mtcars$cyl[8],mean)
tapply(mtcars$hp,mtcars$cyl[4],mean)
tapply(mtcars$hp,mtcars$cyl[4],mean)
tapply(mtcars$hp,mtcars$cyl,mean)
vapply(mtcars,unique)
vapply(mtcars$cyl,unique)
lapply(mtcars,unique)
x <- tapply(mtcars$hp,mtcars$cyl(4),mean)
x <- tapply(mtcars$hp,mtcars$cyl[4],mean)
x <- tapply(mtcars$hp,mtcars$cyl,mean)
x
x[8]-x[4]
x[,3]-x[,1]
x[3]-x[1]
debug(ls)
ls
ls()
1
stop
exit
library(datasets)
data(iris)
rnum(iris)
rnumb(iris)
iris
?rnum
??rnum
?rcount
tapply(iris$Species,iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
round(tapply(iris$Sepal.Length,iris$Species,mean),0)
data(mtcars)
head(mtcars)
X <- tapply(mtcars$hp,mtcars$cyl,mean)
x
print(X)
X[3]-X[1]
round(X[3]-X[1],0)
source(ProgrammingAssignment2/cacheMatrix.R)
list()
list.files()
getwd
setwd("D:/users/tsoiwa/coursera/ProgrammingAssignment2")
getwd()
list.files()
source("cachematrix.R")
my_matrix <- makeCacheMatrix(matrix(1:4,2,2))
my_matrix$get()
my_matrix$getInv()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
